# @schema
# type: integer
# description: Number of replicas for the plugin deployment
# default: 1
# @schema
replicaCount: 1

# @schema
# type: object
# description: Container image configuration of the plugin
# @schema
image:
  # @schema
  # type: string
  # description: Container image repository for the plugin
  # default: "ghcr.io/krateoplatformops/github-rest-dynamic-controller-plugin"
  # @schema
  repository: ghcr.io/krateoplatformops/github-rest-dynamic-controller-plugin
  
  # @schema
  # type: string
  # description: Image pull policy
  # enum: ["Always", "IfNotPresent", "Never"]
  # default: "IfNotPresent"
  # @schema
  pullPolicy: IfNotPresent
  
  # @schema
  # type: string
  # description: Image tag (overrides the chart appVersion if set)
  # default: ""
  # @schema
  tag: ""

# @schema
# type: array
# description: Image pull secrets for private registries
# items:
#   type: string
# @schema
imagePullSecrets: []

# @schema
# type: string
# description: Override the name of the chart
# default: ""
# @schema
nameOverride: ""

# @schema
# type: string
# description: Override the fullname of the chart
# default: ""
# @schema
fullnameOverride: ""

# @schema
# type: object
# description: Service account configuration
# @schema
serviceAccount:
  # @schema
  # type: boolean
  # description: Specifies whether a service account should be created
  # default: false
  # @schema
  create: false
  
  # @schema
  # type: boolean
  # description: Automatically mount a ServiceAccount's API credentials
  # default: true
  # @schema
  automount: true
  
  # @schema
  # type: object
  # description: Annotations to add to the service account
  # additionalProperties: true
  # @schema
  annotations: {}
  
  # @schema
  # type: string
  # description: The name of the service account to use (generated if not set and create is true)
  # default: ""
  # @schema
  name: ""

# @schema
# type: object
# description: Annotations to add to the pod
# additionalProperties: true
# @schema
podAnnotations: {}

# @schema
# type: object
# description: Labels to add to the pod
# additionalProperties: true
# @schema
podLabels: {}

# @schema
# type: object
# description: Pod security context configuration
# additionalProperties: true
# @schema
podSecurityContext: {}

# @schema
# type: object
# description: Security context configuration for the container
# additionalProperties: true
# @schema
securityContext: {}

# @schema
# type: object
# description: Service configuration
# @schema
service:
  # @schema
  # type: string
  # description: Kubernetes service type
  # enum: ["ClusterIP", "NodePort", "LoadBalancer", "ExternalName"]
  # default: "ClusterIP"
  # @schema
  type: ClusterIP
  
  # @schema
  # type: integer
  # description: Service port
  # default: 8080
  # minimum: 1
  # maximum: 65535
  # @schema
  port: 8080

# @schema
# type: object
# description: Ingress configuration
# @schema
ingress:
  # @schema
  # type: boolean
  # description: Enable ingress
  # default: false
  # @schema
  enabled: false
  
  # @schema
  # type: string
  # description: Ingress class name
  # default: ""
  # @schema
  className: ""
  
  # @schema
  # type: object
  # description: Ingress annotations
  # additionalProperties: true
  # @schema
  annotations: {}
  
  # @schema
  # type: array
  # description: Ingress hosts configuration
  # items:
  #   type: object
  # @schema
  hosts:
    - # @schema
      # type: string
      # description: Host name
      # @schema
      host: chart-example.local
      # @schema
      # type: array
      # description: Paths configuration
      # items:
      #   type: object
      # @schema
      paths:
        - # @schema
          # type: string
          # description: URL path
          # @schema
          path: /
          # @schema
          # type: string
          # description: Path type
          # enum: ["Exact", "Prefix", "ImplementationSpecific"]
          # @schema
          pathType: ImplementationSpecific
  
  # @schema
  # type: array
  # description: TLS configuration
  # items:
  #   type: object
  # @schema
  tls: []

# @schema
# type: object
# description: Resource limits and requests
# additionalProperties: true
# @schema
resources: {}

# @schema
# type: object
# description: Horizontal Pod Autoscaler configuration
# @schema
autoscaling:
  # @schema
  # type: boolean
  # description: Enable autoscaling
  # default: false
  # @schema
  enabled: false
  
  # @schema
  # type: integer
  # description: Minimum number of replicas
  # default: 1
  # minimum: 1
  # @schema
  minReplicas: 1
  
  # @schema
  # type: integer
  # description: Maximum number of replicas
  # default: 100
  # minimum: 1
  # @schema
  maxReplicas: 100
  
  # @schema
  # type: integer
  # description: Target CPU utilization percentage
  # default: 80
  # minimum: 1
  # maximum: 100
  # @schema
  targetCPUUtilizationPercentage: 80

# @schema
# type: array
# description: Additional volumes for the deployment
# items:
#   type: object
# @schema
volumes: []

# @schema
# type: array
# description: Additional volume mounts for the deployment
# items:
#   type: object
# @schema
volumeMounts: []

# @schema
# type: object
# description: Node selector for pod assignment
# additionalProperties: true
# @schema
nodeSelector: {}

# @schema
# type: array
# description: Tolerations for pod assignment
# items:
#   type: object
# @schema
tolerations: []

# @schema
# type: object
# description: Affinity rules for pod assignment
# additionalProperties: true
# @schema
affinity: {}

# @schema
# type: array
# description: Environment variables
# items:
#   type: object
# @schema
env: []

# @schema
# type: object
# description: Liveness probe configuration
# @schema
livenessProbe:
  # @schema
  # type: object
  # description: HTTP GET probe configuration
  # @schema
  httpGet:
    # @schema
    # type: string
    # description: HTTP path for health check
    # default: "/healthz"
    # @schema
    path: /healthz
    # @schema
    # type: integer
    # description: Port for health check
    # default: 8080
    # @schema
    port: 8080
  
  # @schema
  # type: integer
  # description: Initial delay before probing starts
  # default: 30
  # minimum: 0
  # @schema
  initialDelaySeconds: 30
  
  # @schema
  # type: integer
  # description: Timeout for the probe
  # default: 5
  # minimum: 1
  # @schema
  timeoutSeconds: 5
  
  # @schema
  # type: integer
  # description: Period between probes
  # default: 10
  # minimum: 1
  # @schema
  periodSeconds: 10

# @schema
# type: object
# description: Readiness probe configuration
# @schema
readinessProbe:
  # @schema
  # type: object
  # description: HTTP GET probe configuration
  # @schema
  httpGet:
    # @schema
    # type: string
    # description: HTTP path for readiness check
    # default: "/readyz"
    # @schema
    path: /readyz
    # @schema
    # type: integer
    # description: Port for readiness check
    # default: 8080
    # @schema
    port: 8080
  
  # @schema
  # type: integer
  # description: Initial delay before probing starts
  # default: 5
  # minimum: 0
  # @schema
  initialDelaySeconds: 5
  
  # @schema
  # type: integer
  # description: Timeout for the probe
  # default: 5
  # minimum: 1
  # @schema
  timeoutSeconds: 5
  
  # @schema
  # type: integer
  # description: Period between probes
  # default: 5
  # minimum: 1
  # @schema
  periodSeconds: 5

# @schema
# type: object
# description: Plugin-specific configuration
# @schema
plugin:
  # @schema
  # type: string
  # description: Suffix added to the deployment name and service name of the plugin
  # default: "plugin"
  # @schema
  suffix: "plugin"

# @schema
# type: object
# description: RestDefinition configuration for various GitHub resources
# @schema
restdefinitions:
  # @schema
  # type: object
  # description: Collaborator RestDefinition configuration
  # @schema
  collaborator:
    # @schema
    # type: boolean
    # description: Enable collaborator RestDefinition
    # default: true
    # @schema
    enabled: true
  
  # @schema
  # type: object
  # description: Repository RestDefinition configuration
  # @schema
  repo:
    # @schema
    # type: boolean
    # description: Enable repository RestDefinition
    # default: true
    # @schema
    enabled: true
  
  # @schema
  # type: object
  # description: Team repository RestDefinition configuration
  # @schema
  teamrepo:
    # @schema
    # type: boolean
    # description: Enable team repository RestDefinition
    # default: true
    # @schema
    enabled: true
  
  # @schema
  # type: object
  # description: Workflow RestDefinition configuration
  # @schema
  workflow:
    # @schema
    # type: boolean
    # description: Enable workflow RestDefinition
    # default: true
    # @schema
    enabled: true
  
  # @schema
  # type: object
  # description: Runner group RestDefinition configuration
  # @schema
  runnergroup:
    # @schema
    # type: boolean
    # description: Enable runner group RestDefinition
    # default: true
    # @schema
    enabled: true